// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id           String    @id @default(uuid()) @map("id")
  title        String
  type         PostType
  state        PostState
  isRepost     Boolean?
  tags         String[]
  createdAt    DateTime  @default(now())
  publishedAt  DateTime?
  createdBy    String
  publishedBy  String?
  comments     Comment[]
  likes        Like[]

  announcement String?
  text         String?
  url          String?
  quoteAuthor  String?
  description  String?

  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  postId    String   @map("post_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  createdBy String

  @@map("comments")
}

model Like {
  id        String   @id @default(uuid())
  postId    String   @map("post_id")
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdBy String

  @@map("likes")
}

enum PostType {
  video
  text
  quote
  photo
  ref
}

enum PostState {
  draft
  published
}
